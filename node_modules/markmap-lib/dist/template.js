"use strict";

exports.__esModule = true;
exports.fillTemplate = fillTemplate;

var _util = require("./util");

const template = "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n<title>Markmap</title>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n}\n#mindmap {\n  display: block;\n  width: 100vw;\n  height: 100vh;\n}\n</style>\n<!--CSS-->\n</head>\n<body>\n<svg id=\"mindmap\"></svg>\n<!--JS-->\n</body>\n</html>\n";
const version = "0.7.12";
const baseJs = ['https://cdn.jsdelivr.net/npm/d3@5', `https://cdn.jsdelivr.net/npm/markmap-lib@${version}/dist/browser/view.min.js`].map(src => ({
  type: 'script',
  data: {
    src
  }
}));

function fillTemplate(data, opts) {
  const jsList = [...(0, _util.persistJS)(baseJs), ...(0, _util.persistJS)([{
    type: 'iife',
    data: {
      fn: (data, init, items, opts) => {
        const {
          Markmap,
          loadPlugins
        } = window.markmap;
        (init ? init(loadPlugins, items, opts) : Promise.resolve()).then(() => {
          window.mm = Markmap.create('svg#mindmap', null, data);
        });
      },
      getParams: ({
        data,
        opts
      }) => {
        const items = [(opts == null ? void 0 : opts.mathJax) && 'mathJax', (opts == null ? void 0 : opts.prism) && 'prism'].filter(Boolean);
        const args = [data];

        if (items.length) {
          args.push((loadPlugins, items, opts) => loadPlugins(items, opts), items, opts);
        }

        return args;
      }
    }
  }], {
    data,
    opts
  })];
  const html = template.replace('<!--CSS-->', '').replace('<!--JS-->', () => jsList.join(''));
  return html;
}